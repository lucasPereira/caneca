pacote @pacoteQualquer;
classe publica MinhaClasse inicio
	atributo publico Real pi;
	?atributo publico Real pi = 3.14;
	construtor publico MinhaClasse() inicio fim
	construtor publico MinhaClasse(Texto parametro) inicio fim
	destrutor publico MinhaClasse() inicio fim
	metodo publico Real pi(Booleano parametro) inicio
		Inteiro declaracaoComAtribuicaoA = 10 + -20 - 2 * 3 / 4 % 5;
		Inteiro declaracaoComAtribuicaoB = (10 + -20) - (((2 * 3) / 4) % 5);
		Inteiro declaracaoComAtribuicaoC = (10 + (-20 - (((2 * 3) / 4) % 5)));
		Booleano comparacao;
		comparacao = 1 > 2;
		Inteiro negativavel = 10;
		Inteiro negativando = -negativavel;
		Booleano negavel = verdadeiro;
		Booleano negando = ~negavel;
		
		se (comparacao) inicio
			comparacao = verdadeiro;
		fim
		
		se (comparacao) inicio
			comparacao = verdadeiro || falso;
		fim senao inicio
			comparacao = falso && verdadeiro;
		fim
		
		Inteiro indice;
		para (indice = 0; indice < 10; indice = indice + 1) inicio
			Sistema:saida:imprimir(indice);
		fim
		
		repita(Inteiro contador; 10) inicio
			Inteiro contador;
			contador = 20;
			Sistema:saida:imprimir(contador);
		fim
		
		enquanto (2 < 20 && 2 <= 20 && 20 > 2 && 20 >= 2 && 20 != 2 && 2 == 2) inicio
			Sistema:saida:imprimir("Loop infinito");
		fim
		
		tente inicio
			Inteiro divisaoPorZero;
			divisaoPorZero = 10 / 0;
		fim capture (Excecao excecao) inicio
			excecao.imprimir();
		fim capture (ExcecaoAritmetica excecao) inicio
			excecao.imprimir();
		fim
		
		novo MinhaClasse(10, pi(verdadeiro)).pi(falso).comoTexto();
		novo MinhaClasse(10, pi(verdadeiro)).pi(falso).comoTexto;
		
		lance nova Excecao();
		
		retorne esse.pi;
	fim
fim
